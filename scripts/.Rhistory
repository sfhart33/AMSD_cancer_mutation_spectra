retrieve_pars(par = "exposures") #, hpd_prob = 0.90)
# Convert matrices to dataframes with group labels
df1 <- as.data.frame(exposures$mean) %>% mutate(group = "A")
df2 <- as.data.frame(exposures2$mean) %>% mutate(group = "B")
df <- bind_rows(df1, df2)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH = p.adjust(p_value, method = "BH"),
p_adj_BY = p.adjust(p_value, method = "BY")) %>%
arrange(p_value)
# Most significant signature
# best <- results %>% slice(1)
#
# best
amsd(no_exposure_test, with_exposure_test, n_sim = n_sim, seed = seed, 'mean_or_sum' = 'sum')$p
head(results)
######
no_exposure_testB <- simulate_spectra(n_samples = n_samples,
n_mutations = n_mutations,
sig_probs = sig_probs,
signatures = signatures)
no_exposure_testB <- as.data.frame(do.call(rbind, no_exposure_testB))
no_exposure_testB
no_exposure_testC <- simulate_spectra(n_samples = n_samples,
n_mutations = n_mutations,
sig_probs = sig_probs,
signatures = signatures)
no_exposure_testC <- as.data.frame(do.call(rbind, no_exposure_testC))
no_exposure_testC
amsd(no_exposure_testB, no_exposure_testC, n_sim = n_sim, seed = seed, 'mean_or_sum' = 'sum')$p
exposures <- fit_signatures(counts = no_exposure_testB,
signatures = cosmic_signatures_v3.2,
iter = 2000,
warmup = 1000,
chains = 1,
seed = 1756) %>%
retrieve_pars(par = "exposures") #, hpd_prob = 0.90)
exposures2 <- fit_signatures(counts = no_exposure_testC,
signatures = cosmic_signatures_v3.2,
iter = 2000,
warmup = 1000,
chains = 1,
seed = 1756) %>%
retrieve_pars(par = "exposures") #, hpd_prob = 0.90)
# Convert matrices to dataframes with group labels
df1 <- as.data.frame(exposures$mean) %>% mutate(group = "A")
df2 <- as.data.frame(exposures2$mean) %>% mutate(group = "B")
df <- bind_rows(df1, df2)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH = p.adjust(p_value, method = "BH"),
p_adj_BY = p.adjust(p_value, method = "BY")) %>%
arrange(p_value)
amsd(no_exposure_testB, no_exposure_testC, n_sim = n_sim, seed = seed, 'mean_or_sum' = 'sum')$p
head(results)
compare_spectra_ttest <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234) {
# Fit signatures
exposuresA <- fit_signatures(
counts = countsA,
signatures = signatures,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
exposuresB <- fit_signatures(
counts = countsB,
signatures = signatures,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A")
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B")
df <- bind_rows(dfA, dfB)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return full results + best hit
results
}
compare_spectra_ttest_exome <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234) {
# Fit signatures
exposuresA <- fit_signatures(
counts = countsA,
signatures = signatures,
opportunities = "human-exome",
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
exposuresB <- fit_signatures(
counts = countsB,
signatures = signatures,
opportunities = "human-exome",
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A")
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B")
df <- bind_rows(dfA, dfB)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return full results + best hit
results
}
# testing with real data
UCEC_eur_names <- anc_calls %>%
filter(tumor_type == "UCEC", anc3 == "eur") %>%
pull(IID)
# testing with real data
# ANCESTRY (anc2 excludes admixed, anc3 includes with closest ancestry group)
anc_calls <- read.table("../inputs/tcga_ancestry_calls.txt",
header=TRUE,
comment.char="",
sep = "\t") %>%
select(IID = patient, tumor_type, consensus_ancestry) %>%
mutate(anc2 = consensus_ancestry, anc3 = consensus_ancestry,) %>%
mutate(across(anc2, str_replace, 'afr_admix', 'admix')) %>%
mutate(across(anc2, str_replace, 'eas_admix', 'admix')) %>%
mutate(across(anc2, str_replace, 'sas_admix', 'admix')) %>%
mutate(across(anc2, str_replace, 'eur_admix', 'admix')) %>%
mutate(across(anc3, str_replace, 'afr_admix', 'afr')) %>%
mutate(across(anc3, str_replace, 'eas_admix', 'eas')) %>%
mutate(across(anc3, str_replace, 'sas_admix', 'sas')) %>%
mutate(across(anc3, str_replace, 'eur_admix', 'eur'))
getwd()
library(tidyverse)
# source("amsd_functions.R")
library(mutspecdist)
# Ancestry calls from: https://gdc.cancer.gov/about-data/publications/CCG-AIM-2020
# ANCESTRY (anc2 excludes admixed, anc3 includes with closest ancestry group)
anc_calls <- read.table("../inputs/tcga_ancestry_calls.txt",
header=TRUE,
comment.char="",
sep = "\t") %>%
select(IID = patient, tumor_type, consensus_ancestry) %>%
mutate(anc2 = consensus_ancestry, anc3 = consensus_ancestry,) %>%
mutate(across(anc2, str_replace, 'afr_admix', 'admix')) %>%
mutate(across(anc2, str_replace, 'eas_admix', 'admix')) %>%
mutate(across(anc2, str_replace, 'sas_admix', 'admix')) %>%
mutate(across(anc2, str_replace, 'eur_admix', 'admix')) %>%
mutate(across(anc3, str_replace, 'afr_admix', 'afr')) %>%
mutate(across(anc3, str_replace, 'eas_admix', 'eas')) %>%
mutate(across(anc3, str_replace, 'sas_admix', 'sas')) %>%
mutate(across(anc3, str_replace, 'eur_admix', 'eur'))
getwd()
setwd("..")
getwd()
setwd("..")
setwd("AMSD_cancer_mutation_spectra")
# testing with real data
# ANCESTRY (anc2 excludes admixed, anc3 includes with closest ancestry group)
anc_calls <- read.table("../inputs/tcga_ancestry_calls.txt",
header=TRUE,
comment.char="",
sep = "\t") %>%
select(IID = patient, tumor_type, consensus_ancestry) %>%
mutate(anc2 = consensus_ancestry, anc3 = consensus_ancestry,) %>%
mutate(across(anc2, str_replace, 'afr_admix', 'admix')) %>%
mutate(across(anc2, str_replace, 'eas_admix', 'admix')) %>%
mutate(across(anc2, str_replace, 'sas_admix', 'admix')) %>%
mutate(across(anc2, str_replace, 'eur_admix', 'admix')) %>%
mutate(across(anc3, str_replace, 'afr_admix', 'afr')) %>%
mutate(across(anc3, str_replace, 'eas_admix', 'eas')) %>%
mutate(across(anc3, str_replace, 'sas_admix', 'sas')) %>%
mutate(across(anc3, str_replace, 'eur_admix', 'eur'))
getwd()
setwd("scripts")
# testing with real data
# ANCESTRY (anc2 excludes admixed, anc3 includes with closest ancestry group)
anc_calls <- read.table("../inputs/tcga_ancestry_calls.txt",
header=TRUE,
comment.char="",
sep = "\t") %>%
select(IID = patient, tumor_type, consensus_ancestry) %>%
mutate(anc2 = consensus_ancestry, anc3 = consensus_ancestry,) %>%
mutate(across(anc2, str_replace, 'afr_admix', 'admix')) %>%
mutate(across(anc2, str_replace, 'eas_admix', 'admix')) %>%
mutate(across(anc2, str_replace, 'sas_admix', 'admix')) %>%
mutate(across(anc2, str_replace, 'eur_admix', 'admix')) %>%
mutate(across(anc3, str_replace, 'afr_admix', 'afr')) %>%
mutate(across(anc3, str_replace, 'eas_admix', 'eas')) %>%
mutate(across(anc3, str_replace, 'sas_admix', 'sas')) %>%
mutate(across(anc3, str_replace, 'eur_admix', 'eur'))
# SPECTRA
tcga_3mer <- read.table("../inputs/tcga_mutation_spectra.txt",
sep="\t",
header = TRUE) %>%
separate(ID, into = c("a","b","c",NA,NA,NA,NA), sep = "-") %>%
mutate(IID = paste(a,b,c,sep = "-")) %>%
select(-a,-b,-c) %>%
select(IID, everything())
UCEC_eur_names <- anc_calls %>%
filter(tumor_type == "UCEC", anc3 == "eur") %>%
pull(IID)
UCEC_eur <- tcga_3mer %>%
filter(IID %in% UCEC_eur_names) %>%
select(-IID, -mut_counts)
# SPECTRA
tcga_3mer <- read.table("../inputs/tcga_mutation_spectra.txt",
sep="\t",
header = TRUE) %>%
separate(ID, into = c("a","b","c",NA,NA,NA,NA), sep = "-") %>%
mutate(IID = paste(a,b,c,sep = "-")) %>%
select(-a,-b,-c) %>%
select(IID, everything())
tcga_3mer_spectra <- tcga_3mer
tcga_3mer_spectra[,2:97] <- tcga_3mer[,2:97]/rowSums(tcga_3mer[,2:97])
tcga_3mer_spectra$mut_counts <- rowSums(select(tcga_3mer, -IID))
tcga_3mer$mut_counts <- rowSums(select(tcga_3mer, -IID))
UCEC_eur_names <- anc_calls %>%
filter(tumor_type == "UCEC", anc3 == "eur") %>%
pull(IID)
UCEC_eur <- tcga_3mer %>%
filter(IID %in% UCEC_eur_names) %>%
select(-IID, -mut_counts)
UCEC_eas_names <- anc_calls %>%
filter(tumor_type == "UCEC", anc3 == "eas") %>%
pull(IID)
UCEC_eas <- tcga_3mer %>%
filter(IID %in% UCEC_eas_names) %>%
select(-IID, -mut_counts)
UCEC_afr_names <- anc_calls %>%
filter(tumor_type == "UCEC", anc3 == "afr") %>%
pull(IID)
UCEC_afr <- tcga_3mer %>%
filter(IID %in% UCEC_afr_names) %>%
select(-IID, -mut_counts)
compare_spectra_ttest_exome <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234) {
# Fit signatures
exposuresA <- suppressMessages(
fit_signatures(
counts = countsA,
signatures = signatures,
opportunities = "human-exome",
iter = iter, warmup = warmup, chains = chains, seed = seed, verbose = FALSE
) %>% retrieve_pars(par = "exposures")
)
exposuresB <- suppressMessages(
fit_signatures(
counts = countsB,
signatures = signatures,
opportunities = "human-exome",
iter = iter, warmup = warmup, chains = chains, seed = seed, verbose = FALSE
) %>% retrieve_pars(par = "exposures")
)
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A", sample = row_number())
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B", sample = row_number())
df  <- bind_rows(dfA, dfB)
df_long <- df %>%
pivot_longer(cols = -c(group, sample), names_to = "signature", values_to = "exposure")
# Run t-tests across all signatures, add group means
results <- df_long %>%
group_by(signature) %>%
summarise(
mean_A = mean(exposure[group == "A"]),
mean_B = mean(exposure[group == "B"]),
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return summary + per-sample exposures
return(list(
results = results,
fitted  = df_long
))
}
compare_spectra_ttest_exome(no_exposure_testB, no_exposure_testC)
eas_afr <- compare_spectra_ttest_exome(UCEC_eas, UCEC_afr)
eas_afr$results
eas_afr$fitted
eas_eur <- compare_spectra_ttest_exome(UCEC_eur, UCEC_eas)
eas_afr$results
eas_afr$fitted
eas_afr$results
eas_afr$results %>%
filter(p_value < 0.05)
eas_afr$results %>%
filter(p_value < 0.05,
mean_A + mean_B > 0.01)
eas_afr$results %>%
filter(#p_value < 0.05,
mean_A + mean_B > 0.01)
eas_afr$results %>%
filter(p_value < 0.05,
mean_A + mean_B > 0.01)
eas_afr$results %>%
filter(p_value < 0.05,
mean_A + mean_B > 0.01) %>%
pull(signature)
ggplot(aes(signature, exposure, fill = group))
ggplot(aes(signature, exposure, fill = group)) +
geom_boxplot()
eas_afr$fitted %>%
filter(signature %in% sigs) %>%
ggplot(aes(signature, exposure, fill = group)) +
geom_boxplot()
sigs <- eas_afr$results %>%
filter(p_value < 0.05,
mean_A + mean_B > 0.01) %>%
pull(signature)
eas_afr$fitted %>%
filter(signature %in% sigs) %>%
ggplot(aes(signature, exposure, fill = group)) +
geom_boxplot()
eas_afr$fitted %>%
filter(signature %in% sigs) %>%
ggplot(aes(signature, exposure, fill = group)) +
geom_boxplot() +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
eas_afr$fitted
eas_afr$fitted %>%
mutate(group = case_when(group == "A" ~ "EAS",
group == "B"  ~ "AFR"))
eas_afr$fitted %>%
mutate(group = case_when(group == "A" ~ "EAS",
group == "B"  ~ "AFR")) %>%
filter(signature %in% sigs) %>%
ggplot(aes(signature, exposure, fill = group)) +
geom_boxplot() +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
eas_afr$results %>%
filter(p_value < 0.05,
mean_A + mean_B > 0.01)
eas_afr$results %>%
filter(p_value < 0.05,
mean_A + mean_B > 0.01) %>% print(n = 24)
sigs <- eas_afr$results %>%
filter(p_value < 0.05,
mean_A + mean_B > 0.02) %>%
pull(signature)
eas_afr$fitted
eas_afr$fitted %>%
mutate(group = case_when(group == "A" ~ "EAS",
group == "B"  ~ "AFR")) %>%
filter(signature %in% sigs) %>%
ggplot(aes(signature, exposure, fill = group)) +
geom_boxplot() +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
eas_afr$results %>%
filter(p_value < 0.05,
mean_A + mean_B > 0.02)
eas_afr$results
eas_afr$fitted
pull(filter(eas_afr$fitted, group == "A" signature == "SBS2"), exposure)
pull(filter(eas_afr$fitted, group == "A", signature == "SBS2"), exposure)
t.test(pull(filter(eas_afr$fitted, group == "A", signature == "SBS2"), exposure),
pull(filter(eas_afr$fitted, group == "B", signature == "SBS2"), exposure))
t.test(pull(filter(eas_afr$fitted, group == "A", signature == "SBS10b"), exposure),
pull(filter(eas_afr$fitted, group == "B", signature == "SBS10b"), exposure))
wilcox.test(pull(filter(eas_afr$fitted, group == "A", signature == "SBS2"), exposure),
pull(filter(eas_afr$fitted, group == "B", signature == "SBS2"), exposure))
wilcox.test(pull(filter(eas_afr$fitted, group == "A", signature == "SBS10b"), exposure),
pull(filter(eas_afr$fitted, group == "B", signature == "SBS10b"), exposure))
install.packages("devtools")
library(devtools)
library(reticulate)
py_config()
wilcox.test(pull(filter(eas_afr$fitted, group == "A", signature == "SBS10a"), exposure),
pull(filter(eas_afr$fitted, group == "B", signature == "SBS10a"), exposure))
t.test(pull(filter(eas_afr$fitted, group == "A", signature == "SBS10a"), exposure),
pull(filter(eas_afr$fitted, group == "B", signature == "SBS10a"), exposure))
eas_afr$results
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = p_value)) +
geom_point()
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value))) +
geom_point()
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value))) +
geom_point()+
geom_hline(yintercept = -log10(0.05))
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value))) +
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_hline(yintercept = -log10(0.05/78))
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value))) +
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_hline(yintercept = -log10(0.05/78))+
xlab("Difference in mean exposure: EAS vs AFR UCEC")
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value))) +
geom_point()+
geom_label(data = filter(eas_afr$results, pvalue < 0.05), x = (mean_A - mean_B), y = -log10(p_value))+
geom_hline(yintercept = -log10(0.05))+
geom_hline(yintercept = -log10(0.05/78))+
xlab("Difference in mean exposure: EAS vs AFR UCEC")
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value))) +
geom_point()+
geom_label(data = filter(eas_afr$results, pvalue < 0.05), x = (mean_A - mean_B), y = -log10(p_value), label = signature)+
geom_hline(yintercept = -log10(0.05))+
geom_hline(yintercept = -log10(0.05/78))+
xlab("Difference in mean exposure: EAS vs AFR UCEC")
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value))) +
geom_point()+
geom_point(data = filter(eas_afr$results, pvalue < 0.05), x = (mean_A - mean_B), y = -log10(p_value), label = signature)+
geom_hline(yintercept = -log10(0.05))+
geom_hline(yintercept = -log10(0.05/78))+
xlab("Difference in mean exposure: EAS vs AFR UCEC")
filter(eas_afr$results, pvalue < 0.05)
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value))) +
geom_point()+
geom_point(data = filter(eas_afr$results, p_value < 0.05), x = (mean_A - mean_B), y = -log10(p_value), label = signature)+
geom_hline(yintercept = -log10(0.05))+
geom_hline(yintercept = -log10(0.05/78))+
xlab("Difference in mean exposure: EAS vs AFR UCEC")
filter(eas_afr$results, p_value < 0.05)
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value), label = signature)) +
geom_point()+
#geom_point(data = filter(eas_afr$results, p_value < 0.05), x = (mean_A - mean_B), y = -log10(p_value), label = signature)+
geom_hline(yintercept = -log10(0.05))+
geom_hline(yintercept = -log10(0.05/78))+
xlab("Difference in mean exposure: EAS vs AFR UCEC")
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value), label = signature)) +
geom_point()+
geom_text_repel()+
#geom_point(data = filter(eas_afr$results, p_value < 0.05), x = (mean_A - mean_B), y = -log10(p_value), label = signature)+
geom_hline(yintercept = -log10(0.05))+
geom_hline(yintercept = -log10(0.05/78))+
xlab("Difference in mean exposure: EAS vs AFR UCEC")
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value), label = signature)) +
geom_point()+
geom_text()+
#geom_point(data = filter(eas_afr$results, p_value < 0.05), x = (mean_A - mean_B), y = -log10(p_value), label = signature)+
geom_hline(yintercept = -log10(0.05))+
geom_hline(yintercept = -log10(0.05/78))+
xlab("Difference in mean exposure: EAS vs AFR UCEC")
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value), label = signature)) +
geom_point()+
geom_text_repel()+
#geom_point(data = filter(eas_afr$results, p_value < 0.05), x = (mean_A - mean_B), y = -log10(p_value), label = signature)+
geom_hline(yintercept = -log10(0.05))+
geom_hline(yintercept = -log10(0.05/78))+
xlab("Difference in mean exposure: EAS vs AFR UCEC")
library(ggrepel)
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value), label = signature)) +
geom_point()+
geom_text_repel()+
#geom_point(data = filter(eas_afr$results, p_value < 0.05), x = (mean_A - mean_B), y = -log10(p_value), label = signature)+
geom_hline(yintercept = -log10(0.05))+
geom_hline(yintercept = -log10(0.05/78))+
xlab("Difference in mean exposure: EAS vs AFR UCEC")
eas_afr$results %>%
ggplot(aes(x = (mean_A - mean_B), y = -log10(p_value), label = signature)) +
geom_point()+
geom_text_repel()+
geom_hline(yintercept = -log10(0.05))+
geom_hline(yintercept = -log10(0.05/78))+
xlab("Difference in mean exposure: EAS vs AFR UCEC")+
theme_classic()
library(parallel)
results
use_python
py_config()
library(reticulate)
py_config()
