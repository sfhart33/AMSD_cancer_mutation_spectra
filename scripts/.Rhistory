results
for(sam in rep(5,10)){
for(ex in c(0,0.1)){
out <- compare_spectra(n_samples = sam, frac_extra = ex, additional_sig = "SBS40", n_mutations = 2500)
results <- bind_rows(results,out)
count <- count + 1
print(count)
}
}
results
results[1:20,] %>%
ggplot(aes(amsd_p, best_p_adj_Bonf, color = frac_extra))+
geom_point()
results[1:20,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), color = frac_extra))+
geom_point()
results[1:20,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), color = frac_extra))+
geom_point()+
hline(yintercept = -log10(0.05))
results[1:20,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), color = frac_extra))+
geom_point()+
geom_hline(yintercept = -log10(0.05))
results[1:20,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), color = frac_extra))+
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_vline(xintercept = -log10(0.05))
results[1:20,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), fill = frac_extra))+
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_vline(xintercept = -log10(0.05))+
geom
results[1:20,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), fill = frac_extra))+
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_vline(xintercept = -log10(0.05))+
ggtitle("n=5,mut=50,sig=2")
results[1:20,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), fill = as.integer(frac_extra*100)))+
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_vline(xintercept = -log10(0.05))+
ggtitle("n=5,mut=50,sig=2")
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), fill = frac_extra*100)+
results[1:20,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), color = frac_extra))+
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_vline(xintercept = -log10(0.05))+
ggtitle("n=5,mut=50,sig=2")
results[1:20,] %>%
results[1:20,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), color = frac_extra))+
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_vline(xintercept = -log10(0.05))+
ggtitle("n=5,mut=50,sig=2")
results[21:40,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), color = frac_extra))+
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_vline(xintercept = -log10(0.05))+
ggtitle("n=25,mut=50,sig=40")
results[41:60,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), color = frac_extra))+
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_vline(xintercept = -log10(0.05))+
ggtitle("n=5,mut=2500,sig=40")
results[1:20,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), color = frac_extra))+
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_vline(xintercept = -log10(0.05))+
ggtitle("n=5,mut=50,sig=2")
results[1:20,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), color = frac_extra))+
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_vline(xintercept = -log10(0.05))+
ggtitle("n=5,mut=50,sig=2")
results[21:40,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), color = frac_extra))+
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_vline(xintercept = -log10(0.05))+
ggtitle("n=25,mut=50,sig=40")
results[41:60,] %>%
ggplot(aes(-log10(amsd_p), -log10(best_p_adj_Bonf), color = frac_extra))+
geom_point()+
geom_hline(yintercept = -log10(0.05))+
geom_vline(xintercept = -log10(0.05))+
ggtitle("n=5,mut=2500,sig=40")
eas_afr <- compare_spectra_ttest(UCEC_eas, UCEC_afr)
?fit_signatures
compare_spectra_ttest <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234, oppertunities = NULL) {
# Fit signatures
exposuresA <- fit_signatures(
counts = countsA,
signatures = signatures,
oppertunities = oppertunities,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
exposuresB <- fit_signatures(
counts = countsB,
signatures = signatures,
oppertunities = oppertunities,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A")
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B")
df <- bind_rows(dfA, dfB)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return full results + best hit
results
}
eas_afr <- compare_spectra_ttest(UCEC_eas, UCEC_afr,
oppertunities = "human-exome")
eas_afr <- compare_spectra_ttest(UCEC_eas, UCEC_afr,
oppertunities = "human-exome")
compare_spectra_ttest(no_exposure_testB, no_exposure_testC)
compare_spectra_ttest <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234, oppertunities = NULL) {
# Fit signatures
exposuresA <- fit_signatures(
counts = countsA,
signatures = signatures,
#oppertunities = oppertunities,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
exposuresB <- fit_signatures(
counts = countsB,
signatures = signatures,
#oppertunities = oppertunities,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A")
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B")
df <- bind_rows(dfA, dfB)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return full results + best hit
results
}
eas_afr <- compare_spectra_ttest(UCEC_eas, UCEC_afr,
oppertunities = "human-exome")
compare_spectra_ttest <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234, opp = NULL) {
# Fit signatures
exposuresA <- fit_signatures(
counts = countsA,
signatures = signatures,
oppertunities = opp,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
exposuresB <- fit_signatures(
counts = countsB,
signatures = signatures,
oppertunities = opp,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A")
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B")
df <- bind_rows(dfA, dfB)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return full results + best hit
results
}
eas_afr <- compare_spectra_ttest(UCEC_eas, UCEC_afr,
oppertunities = "human-exome")
compare_spectra_ttest <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234, opp = NULL) {
# Fit signatures
exposuresA <- fit_signatures(
counts = countsA,
signatures = signatures,
oppertunities = opp,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
exposuresB <- fit_signatures(
counts = countsB,
signatures = signatures,
oppertunities = opp,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A")
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B")
df <- bind_rows(dfA, dfB)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return full results + best hit
results
}
UCEC_eur_names <- anc_calls %>%
filter(tumor_type == "UCEC", anc3 == "eur") %>%
pull(IID)
UCEC_eur <- tcga_3mer %>%
filter(IID %in% UCEC_eur_names) %>%
select(-IID, -mut_counts)
UCEC_eas_names <- anc_calls %>%
filter(tumor_type == "UCEC", anc3 == "eas") %>%
pull(IID)
UCEC_eas <- tcga_3mer %>%
filter(IID %in% UCEC_eas_names) %>%
select(-IID, -mut_counts)
UCEC_afr_names <- anc_calls %>%
filter(tumor_type == "UCEC", anc3 == "afr") %>%
pull(IID)
UCEC_afr <- tcga_3mer %>%
filter(IID %in% UCEC_afr_names) %>%
select(-IID, -mut_counts)
compare_spectra_ttest(no_exposure_testB, no_exposure_testC)
compare_spectra_ttest <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234, opportunities = NULL) {
# Fit signatures
exposuresA <- fit_signatures(
counts = countsA,
signatures = signatures,
opportunities = opportunities,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
exposuresB <- fit_signatures(
counts = countsB,
signatures = signatures,
opportunities = opportunities,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A")
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B")
df <- bind_rows(dfA, dfB)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return full results + best hit
results
}
eas_afr <- compare_spectra_ttest(UCEC_eas, UCEC_afr,
oppertunities = "human-exome")
compare_spectra_ttest <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234) {
# Fit signatures
exposuresA <- fit_signatures(
counts = countsA,
signatures = signatures,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
exposuresB <- fit_signatures(
counts = countsB,
signatures = signatures,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A")
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B")
df <- bind_rows(dfA, dfB)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return full results + best hit
results
}
compare_spectra_ttest_exome <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234) {
# Fit signatures
exposuresA <- fit_signatures(
counts = countsA,
signatures = signatures,
opportunities = "human-exome",
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
exposuresB <- fit_signatures(
counts = countsB,
signatures = signatures,
opportunities = "human-exome",
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A")
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B")
df <- bind_rows(dfA, dfB)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return full results + best hit
results
}
compare_spectra_ttest <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234, opportunities = NULL) {
# Fit signatures
exposuresA <- fit_signatures(
counts = countsA,
signatures = signatures,
opportunities = opportunities,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
exposuresB <- fit_signatures(
counts = countsB,
signatures = signatures,
opportunities = opportunities,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A")
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B")
df <- bind_rows(dfA, dfB)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return full results + best hit
results
}
eas_afr <- compare_spectra_ttest(UCEC_eas, UCEC_afr,
oppertunities = "human-exome")
compare_spectra_ttest <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234) {
# Fit signatures
exposuresA <- fit_signatures(
counts = countsA,
signatures = signatures,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
exposuresB <- fit_signatures(
counts = countsB,
signatures = signatures,
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A")
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B")
df <- bind_rows(dfA, dfB)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return full results + best hit
results
}
compare_spectra_ttest_exome <- function(countsA, countsB, signatures = cosmic_signatures_v3.2,
iter = 2000, warmup = 1000, chains = 1, seed = 1234) {
# Fit signatures
exposuresA <- fit_signatures(
counts = countsA,
signatures = signatures,
opportunities = "human-exome",
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
exposuresB <- fit_signatures(
counts = countsB,
signatures = signatures,
opportunities = "human-exome",
iter = iter, warmup = warmup, chains = chains, seed = seed
) %>% retrieve_pars(par = "exposures")
# Convert to long dataframe
dfA <- as.data.frame(exposuresA$mean) %>% mutate(group = "A")
dfB <- as.data.frame(exposuresB$mean) %>% mutate(group = "B")
df <- bind_rows(dfA, dfB)
# Run t-tests across all signatures
results <- df %>%
pivot_longer(-group, names_to = "signature", values_to = "exposure") %>%
group_by(signature) %>%
summarise(
p_value = t.test(exposure ~ group)$p.value,
.groups = "drop"
) %>%
mutate(
p_adj_Bonf = p.adjust(p_value, method = "bonferroni"),
p_adj_BH   = p.adjust(p_value, method = "BH"),
p_adj_BY   = p.adjust(p_value, method = "BY")
) %>%
arrange(p_value)
# Return full results + best hit
results
}
UCEC_eur_names <- anc_calls %>%
filter(tumor_type == "UCEC", anc3 == "eur") %>%
pull(IID)
UCEC_eur <- tcga_3mer %>%
filter(IID %in% UCEC_eur_names) %>%
select(-IID, -mut_counts)
UCEC_eas_names <- anc_calls %>%
filter(tumor_type == "UCEC", anc3 == "eas") %>%
pull(IID)
UCEC_eas <- tcga_3mer %>%
filter(IID %in% UCEC_eas_names) %>%
select(-IID, -mut_counts)
UCEC_afr_names <- anc_calls %>%
filter(tumor_type == "UCEC", anc3 == "afr") %>%
pull(IID)
UCEC_afr <- tcga_3mer %>%
filter(IID %in% UCEC_afr_names) %>%
select(-IID, -mut_counts)
compare_spectra_ttest(no_exposure_testB, no_exposure_testC)
eas_afr <- compare_spectra_ttest(UCEC_eas, UCEC_afr,
oppertunities = "human-exome")
eas_afr <- compare_spectra_ttest(UCEC_eas, UCEC_afr)
eas_afr
eas_eur <- compare_spectra_ttest(UCEC_eur, UCEC_eas)
eas_eur
