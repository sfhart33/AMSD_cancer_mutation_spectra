sig_probs    = "sig_probs",     # string so eval(parse()) works
additional_sig = c("SBSX", "SBS40", "SBS2"),
n_sim        = 1000,
stringsAsFactors = FALSE
)
sig_probs <- c(SBS1 = 0.3, SBS5 = 0.6, SBS18 = 0.1)
param_grid <- expand.grid(
frac_extra   = c(0, 0.02, 0.05, 0.1, 0.2),
n_samples    = c(5, 25, 125), # c(5, 25, 125, 625)
n_mutations  = c(50,2500),
sig_probs    = "sig_probs",     # string so eval(parse()) works
additional_sig = c("CP", "NPYR"),
n_sim        = 1000,
stringsAsFactors = FALSE
)
print(param_grid)
param_grid <- expand.grid(
frac_extra   = c(0, 0.02, 0.05, 0.1, 0.2),
n_samples    = c(5, 25, 125), # c(5, 25, 125, 625)
n_mutations  = c(50,2500),
sig_probs    = "sig_probs",     # string so eval(parse()) works
additional_sig = "CP",
n_sim        = 1000,
stringsAsFactors = FALSE
)
print(param_grid)
colnames(plot_sigprof)
plot_sigprof
colnames(results_sigprof)
results_sigprof
colnames(results_sigprof)
results <- read.delim("top_results_sigsX-40-2.tsv", header = FALSE)
results
readRDS("top_results_simulations_sigprofiler_CP-NPYR.rds")
readRDS("top_results_simulations_sigprofiler_CP-NPYR.rds", header = FALSE)
results <- read.delim("top_results_sigsX-40-2.tsv", header = FALSE) %>%
rbind(read.delim("top_results_CP-NPYR.tsv", header = FALSE)) %>%
rbind(read.delim("top_results_SBS2-40-CP-NPYR.tsv", header = FALSE))
results
results <- read.delim("top_results_sigsX-40-2.tsv", header = FALSE) %>%
rbind(read.delim("top_results_CP-NPYR.tsv", header = FALSE)) %>%
rbind(read.delim("top_results_SBS2-40-CP-NPYR.tsv", header = FALSE))
results
colnames(results) <- c("signature", "mean_A", "mean_B", "p_ttest", "p_wilcox",
"present","n_signatures_present", "p_ttest_Bonf",
"p_wilcox_Bonf", "n_samples", "n_mutations", "additional_sig",
"frac_extra", "seed", "amsd_p", "replicate",  "param_set", "run_id")
results_sigprof <- filter(results, additional_sig != "SBSX")
results_sigprof
results <- read.delim("top_results_sigsX-40-2.tsv", header = FALSE) %>%
rbind(read.delim("top_results_CP-NPYR.tsv", header = FALSE)) %>%
rbind(read.delim("top_results_SBS2-40-CP-NPYR.tsv", header = FALSE))
results
colnames(results) <- c("signature", "mean_A", "mean_B", "p_ttest", "p_wilcox",
"present","n_signatures_present", "p_ttest_Bonf",
"p_wilcox_Bonf", "n_samples", "n_mutations", "additional_sig",
"frac_extra", "seed", "amsd_p", "replicate",  "param_set", "run_id")
results_sigprof <- filter(results, additional_sig != "SBSX")
results_sigprof
# output2 <- results_sigprof %>%
#   group_by(n_samples, n_mutations, additional_sig, frac_extra) %>%
#   summarize(success_amsd = sum(amsd_p <= 0.05)/n(),
#             success_ttest = sum(p_ttest <= 0.05)/n(),
#             success_wilcox = sum(p_wilcox <= 0.05)/n(),
#             success_ttestBonf = sum(p_ttest_Bonf <= 0.05)/n(),
#             success_wilcoxBonf = sum(p_wilcox_Bonf <= 0.05)/n(),
#             # success_ttestBH = sum(p_ttest_BH <= 0.05)/n(),
#             # success_wilcoxBH = sum(p_wilcox_BH <= 0.05)/n()
#   )
output2 <- results_sigprof %>%
group_by(n_samples, n_mutations, additional_sig, frac_extra) %>%
summarize(success_amsd = sum(amsd_p <= 0.05)/n(),
success_amsd20 = sum(amsd_p <= 0.05/20)/n(),
success_wilcox = sum(p_wilcox <= 0.05)/n(),
success_wilcox20 = sum(p_wilcox <= 0.05/20)/n(),
success_wilcoxBonf = sum(p_wilcox_Bonf <= 0.05)/n(),
success_wilcoxBonf20 = sum(p_wilcox_Bonf <= 0.05/20)/n()
)
output2
# output2 <- results_sigprof %>%
#   group_by(n_samples, n_mutations, additional_sig, frac_extra) %>%
#   summarize(success_amsd = sum(amsd_p <= 0.05)/n(),
#             success_ttest = sum(p_ttest <= 0.05)/n(),
#             success_wilcox = sum(p_wilcox <= 0.05)/n(),
#             success_ttestBonf = sum(p_ttest_Bonf <= 0.05)/n(),
#             success_wilcoxBonf = sum(p_wilcox_Bonf <= 0.05)/n(),
#             # success_ttestBH = sum(p_ttest_BH <= 0.05)/n(),
#             # success_wilcoxBH = sum(p_wilcox_BH <= 0.05)/n()
#   )
output2 <- results_sigprof %>%
group_by(n_samples, n_mutations, additional_sig, frac_extra) %>%
summarize(n_tests = n(),
success_amsd = sum(amsd_p <= 0.05)/n(),
success_amsd20 = sum(amsd_p <= 0.05/20)/n(),
success_wilcox = sum(p_wilcox <= 0.05)/n(),
success_wilcox20 = sum(p_wilcox <= 0.05/20)/n(),
success_wilcoxBonf = sum(p_wilcox_Bonf <= 0.05)/n(),
success_wilcoxBonf20 = sum(p_wilcox_Bonf <= 0.05/20)/n()
)
output2
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,success_wilcoxBonf, color = as.character(frac_extra), size = n_samples))+
geom_point()+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 4),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,success_wilcoxBonf, color = n_mutations, size = n_samples))+
geom_point()+
facet_grid(as.character(frac_extra) ~ additional_sig) +
scale_size_continuous(
range = c(2, 4),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,success_wilcoxBonf, color = as.character(n_mutations), size = n_samples))+
geom_point()+
facet_grid(as.character(frac_extra) ~ additional_sig) +
scale_size_continuous(
range = c(2, 4),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,success_wilcoxBonf, color = frac_extra, size = as.character(n_mutations)))+
geom_point()+
facet_grid(n_samples ~ additional_sig) +
scale_size_continuous(
range = c(2, 4),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,success_wilcoxBonf, color = frac_extra, size = n_mutations))+
geom_point()+
facet_grid(n_samples ~ additional_sig) +
scale_size_continuous(
range = c(2, 4),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,success_wilcoxBonf, color = frac_extra, size = n_mutations))+
geom_point()+
facet_grid(n_samples ~ additional_sig) +
scale_size_continuous(
range = c(2, 4),
#breaks = c(5,25,125)
breaks = c(50,2500)
)+
geom_abline(slope = 1, linetype = "dashed")
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,success_wilcoxBonf, color = as.character(frac_extra), size = n_samples))+
geom_point()+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 4),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,success_wilcoxBonf, color = frac_extra, size = n_mutations))+
geom_point()+
facet_grid(n_samples ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
#breaks = c(5,25,125)
breaks = c(50,2500)
)+
geom_abline(slope = 1, linetype = "dashed")
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,success_wilcoxBonf, color = as.character(frac_extra), size = n_samples))+
geom_point()+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,success_wilcoxBonf, color = as.character(frac_extra), size = n_samples))+
geom_point(alpha = 0.5)+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,success_wilcoxBonf, color = as.character(frac_extra), size = n_samples))+
geom_point(alpha = 0.75)+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,
success_wilcoxBonf,
color = factor(frac_extra, levels = c("0.02","0.05","0.1","0.2")),
size = n_samples))+
geom_point(alpha = 0.75)+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,
success_wilcoxBonf,
color = factor(frac_extra, levels = c("0.02","0.05","0.1","0.2")),
size = n_samples))+
geom_point(alpha = 0.75)+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")+
guides(color = guide_legend(title = "Fraction extra mutations \nper exposure sample"),
size = guide_legend(title = "Sample count \n(same # exposed\nand non-exposed)"))+
xlab("Sample count (same # exposed and non-exposed)")+
ylab("Difference detected \n(p<0.05, fraction of 100 simulations)")+
# ggtitle("AMSD strength of detection in \nWES (50 mu/sample) and WGS (2500 mu/sample)")+
theme_classic()
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,
success_wilcoxBonf,
color = factor(frac_extra, levels = c("0.02","0.05","0.1","0.2")),
size = n_samples))+
geom_point(alpha = 0.75)+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")+
guides(color = guide_legend(title = "Fraction extra mutations \nper exposure sample"),
size = guide_legend(title = "Sample count \n(same # exposed\nand non-exposed)"))+
xlab("Sample count (same # exposed and non-exposed)")+
ylab("Difference detected \n(p<0.05, fraction of 100 simulations)")+
# ggtitle("AMSD strength of detection in \nWES (50 mu/sample) and WGS (2500 mu/sample)")+
theme_bw()
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,
success_wilcoxBonf,
color = factor(frac_extra, levels = c("0.02","0.05","0.1","0.2")),
size = n_samples))+
geom_point(alpha = 0.75)+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")+
guides(color = guide_legend(title = "Fraction extra mutations \nper exposure sample"),
size = guide_legend(title = "Sample count \n(same # exposed\nand non-exposed)"))+
xlab("")+
ylab("")+
theme_bw()
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,
success_wilcoxBonf,
color = factor(frac_extra, levels = c("0.02","0.05","0.1","0.2")),
size = n_samples))+
geom_point(alpha = 0.75)+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")+
guides(color = guide_legend(title = "Fraction extra mutations \nper exposure sample"),
Difference detected by AMSD \n(p<0.05, fraction of 50 simulations) size = guide_legend(title = "Sample count \n(same # exposed\nand non-exposed)"))+
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_amsd,
success_wilcoxBonf,
color = factor(frac_extra, levels = c("0.02","0.05","0.1","0.2")),
size = n_samples))+
geom_point(alpha = 0.75)+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")+
guides(color = guide_legend(title = "Fraction extra mutations \nper exposure sample"),
size = guide_legend(title = "Sample count \n(same # exposed\nand non-exposed)"))+
xlab("Difference in spectra detected by AMSD \n(p<0.05, fraction of 50 simulations)")+
ylab("Difference in signatures detected by wilcoxen rank sum \n(p<0.05, fraction of 50 simulations)")+
# ggtitle("AMSD strength of detection in \nWES (50 mu/sample) and WGS (2500 mu/sample)")+
theme_bw()
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_wilcoxBonf,
success_amsd,
color = factor(frac_extra, levels = c("0.02","0.05","0.1","0.2")),
size = n_samples))+
geom_point(alpha = 0.75)+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")+
guides(color = guide_legend(title = "Fraction extra mutations \nper exposure sample"),
size = guide_legend(title = "Sample count \n(same # exposed\nand non-exposed)"))+
ylab("Difference in spectra detected by AMSD \n(p<0.05, fraction of 50 simulations)")+
xlab("Difference in signatures detected by wilcoxen rank sum \n(p<0.05, fraction of 50 simulations)")+
# ggtitle("AMSD strength of detection in \nWES (50 mu/sample) and WGS (2500 mu/sample)")+
theme_bw()
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_wilcoxBonf,
success_amsd,
color = factor(frac_extra, levels = c("0.02","0.05","0.1","0.2")),
size = n_samples))+
geom_point(alpha = 0.75)+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")+
guides(color = guide_legend(title = "Fraction extra mutations \nper exposure sample"),
size = guide_legend(title = "Sample count \n(same # exposed\nand non-exposed)"))+
ylab("Difference in spectra detected by AMSD \n(p<0.05, fraction of 50 simulations)")+
xlab("Difference in signatures detected by wilcoxen rank sum test \n(p<0.05, fraction of 50 simulations)")+
# ggtitle("AMSD strength of detection in \nWES (50 mu/sample) and WGS (2500 mu/sample)")+
theme_bw()
output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_wilcoxBonf,
success_amsd,
color = factor(frac_extra, levels = c("0.02","0.05","0.1","0.2")),
size = n_samples))+
geom_point(alpha = 0.75)+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")+
guides(color = guide_legend(title = "Fraction extra mutations \nper exposure sample"),
size = guide_legend(title = "Sample count \n(same # exposed\nand non-exposed)"))+
ylab("Difference in spectra detected by AMSD \n(p<0.05, fraction of 50 simulations)")+
xlab("Difference in signatures detected by wilcoxen rank sum test \n(p<0.05, bonferroni corrected for # signatures present, fraction of 50 simulations)")+
# ggtitle("AMSD strength of detection in \nWES (50 mu/sample) and WGS (2500 mu/sample)")+
theme_bw()
comparison_plot <- output2 %>%
filter(frac_extra > 0) %>%
ggplot(aes(success_wilcoxBonf,
success_amsd,
color = factor(frac_extra, levels = c("0.02","0.05","0.1","0.2")),
size = n_samples))+
geom_point(alpha = 0.75)+
facet_grid(n_mutations ~ additional_sig) +
scale_size_continuous(
range = c(2, 5),
breaks = c(5,25,125)
)+
geom_abline(slope = 1, linetype = "dashed")+
guides(color = guide_legend(title = "Fraction extra mutations \nper exposure sample"),
size = guide_legend(title = "Sample count \n(same # exposed\nand non-exposed)"))+
ylab("Difference in spectra detected by AMSD \n(p<0.05, fraction of 50 simulations)")+
xlab("Difference in signatures detected by wilcoxen rank sum test \n(p<0.05, bonferroni corrected for # signatures present, fraction of 50 simulations)")+
# ggtitle("AMSD strength of detection in \nWES (50 mu/sample) and WGS (2500 mu/sample)")+
theme_bw()
comparison_plot
ggsave("../outputs/amsd_simulations_comparison.png",
plot = comparison_plot,
width = 7,
height = 5,
units = "in"
)
ggsave("../outputs/amsd_simulations_comparison.png",
plot = comparison_plot,
width = 8,
height = 4,
units = "in"
)
ggsave("../outputs/amsd_simulations_comparison.png",
plot = comparison_plot,
width = 6,
height = 3,
units = "in"
)
ggsave("../outputs/amsd_simulations_comparison.png",
plot = comparison_plot,
width = 10,
height = 5,
units = "in"
)
exp_signatures <- read.delim("../inputs/human_sbs96_filtered_v1_0.txt",
sep = "\t",
header = TRUE,
check.names = FALSE) %>%
separate(MutationType, into = c("a","b"), sep = "\\[", remove = FALSE) %>%
separate(b, into = c("b","c"), sep = "\\]") %>%
arrange(b,a,c) %>%
select(-a,-b,-c) %>%
column_to_rownames(var = "MutationType") %>%
t() %>%
as.data.frame()
colnames(exp_signatures) <- colnames(cosmic_signatures_v3.2)
cosmic_signatures_v3.2_new <- rbind(cosmic_signatures_v3.2,
CP = exp_signatures["cyclophosphamide_557117b73fe2",],
NPYR = exp_signatures["n_nitrosopyrrolidine_ff630a9dde6d",])
tail(cosmic_signatures_v3.2_new)
plot_cosmic_spectra(cosmic_signatures_v3.2_new, c("CP", "NPYR", "SBS2", "SBS40"))
plot_cosmic_spectra <- function(signatures, rows_to_plot){
# signatures = your COSMIC matrix (rows = signature names, cols = trinucleotide mutations)
# rows_to_plot = vector of row names you want to plot (e.g. c("SBS91", "SBS92", "NPYR"))
# subset rows
df <- signatures[rows_to_plot, , drop = FALSE]
# reshape to long format
df_long <- df %>%
as.data.frame() %>%
rownames_to_column("Signature") %>%
pivot_longer(-Signature, names_to = "trinuc", values_to = "fraction") %>%
mutate(mut = sub(".*>", "", trinuc))   # extract substitution class for coloring
# color scheme
COLORS <- c("steelblue", "gray40", "darkred", "gray60", "darkolivegreen4", "rosybrown")
# plot
p <- ggplot(df_long, aes(x = trinuc, y = fraction, fill = mut)) +
geom_col() +
scale_fill_manual(values = COLORS) +
scale_y_continuous(expand = c(0,0)) +
facet_wrap(~Signature, ncol = 1, scales = "free_y") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6),
panel.spacing = unit(0.1,'lines'),
legend.position="none",
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
strip.text = element_text(face = "bold")
) +
xlab("Trinucleotide context") +
ylab("Mutation fraction")
return(p)
}
plot_cosmic_spectra(cosmic_signatures_v3.2_new, c("CP", "NPYR", "SBS2", "SBS40"))
plot_cosmic_spectra <- function(signatures, rows_to_plot){
# subset rows
df <- signatures[rows_to_plot, , drop = FALSE]
# reshape to long format
df_long <- df %>%
as.data.frame() %>%
rownames_to_column("Signature") %>%
pivot_longer(-Signature, names_to = "trinuc", values_to = "fraction") %>%
mutate(substitution = sub(".*>", "", trinuc))  # e.g. "C>A"
# 6 substitution classes
SUB_CLASSES <- c("C>A","C>G","C>T","T>A","T>C","T>G")
COLORS <- c("steelblue", "gray40", "darkred", "gray60", "darkolivegreen4", "rosybrown")
names(COLORS) <- SUB_CLASSES
# plot
p <- ggplot(df_long, aes(x = trinuc, y = fraction, fill = substitution)) +
geom_col() +
scale_fill_manual(values = COLORS) +
scale_y_continuous(expand = c(0,0)) +
facet_wrap(~Signature, ncol = 1, scales = "free_y") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6),
panel.spacing = unit(0.1,'lines'),
legend.position="none",
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
strip.text = element_text(face = "bold")
) +
xlab("Trinucleotide context") +
ylab("Mutation fraction")
return(p)
}
plot_cosmic_spectra(cosmic_signatures_v3.2_new, c("CP", "NPYR", "SBS2", "SBS40"))
cosmic_signatures_v3.2_new[c(c("CP", "NPYR", "SBS2", "SBS40")),] %>%
plot_spectrum(pdf_path = "../outputs/spike-in_signatures.pdf")
devtools::install_github("MaikeMorrison/sigvar", dependencies = TRUE, build_vignettes = TRUE)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18") # for R 4.3
devtools::install_github("MaikeMorrison/sigvar", dependencies = TRUE, build_vignettes = TRUE, upgrade = "never")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
